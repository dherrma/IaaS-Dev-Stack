{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Reference Architecture to host Security Appliance on AWS - Creates Webserver Auto Scaling group",
    "Metadata": {
        "Authors": {
            "Description": "David Herrmann <david.herrmann@controlware.de"
        },
        "License": {
            "Description": "Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved. SPDX-License-Identifier: MIT-0"
        },
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Web Parameters"
                    },
                    "Parameters": [
                        "EC2KeyName",
                        "WebInstanceType",
                        "WebAsgMax",
                        "WebAsgMin",
                        "WebSecurityGroup",
                        "NumberOfSubnets",
                        "Subnet",
                        "PublicAlbTargetGroupArn",
                        "PublicAlbHostname",
                        "SslCertificate"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Parameters"
                    },
                    "Parameters": [
                        "DatabaseClusterEndpointAddress",
                        "DatabaseName",
                        "DatabaseMasterUsername",
                        "DatabaseMasterPassword"
                    ]
                }
            ],
            "ParameterLabels": {
                "DatabaseClusterEndpointAddress": {
                    "default": "DB Cluster Endpoint Address"
                },
                "DatabaseMasterUsername": {
                    "default": "DB Master Username"
                },
                "DatabaseMasterPassword": {
                    "default": "DB Master Password"
                },
                "DatabaseName": {
                    "default": "DB Name"
                },
                "EC2KeyName": {
                    "default": "Existing Key Pair"
                },
                "NumberOfSubnets": {
                    "default": "Number of subnets"
                },
                "PublicAlbTargetGroupArn": {
                    "default": "Public Alb Target Group Arn"
                },
                "PublicAlbHostname": {
                    "default": "Public Alb Hostname"
                },
                "SslCertificate": {
                    "default": "ACM Cert attached to Public Alb"
                },
                "Subnet": {
                    "default": "Subnets"
                },
                "WebAsgMax": {
                    "default": "Web ASG Max"
                },
                "WebAsgMin": {
                    "default": "Web ASG Min"
                },
                "WebInstanceType": {
                    "default": "Web Instance Type"
                },
                "WebSecurityGroup": {
                    "default": "Web Security Group"
                }
            }
        }
    },
    "Parameters": {
        "DatabaseClusterEndpointAddress": {
            "Description": "The RDS cluster endpoint address.",
            "Type": "String"
        },
        "DatabaseMasterUsername": {
            "AllowedPattern": "^([a-zA-Z0-9]*)$",
            "Description": "The Amazon RDS master username.",
            "ConstraintDescription": "Must contain only alphanumeric characters and be at least 8 characters.",
            "MaxLength": 16,
            "MinLength": 1,
            "Type": "String"
        },
        "DatabaseMasterPassword": {
            "AllowedPattern": "^([a-z0-9A-Z`~!#$%^&*()_+,\\\\-])*$",
            "ConstraintDescription": "Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-",
            "Description": "The Amazon RDS master password.",
            "MaxLength": 41,
            "MinLength": 8,
            "NoEcho": true,
            "Type": "String"
        },
        "DatabaseName": {
            "AllowedPattern": "^([a-zA-Z0-9]*)$",
            "Description": "The Amazon RDS master database name.",
            "Type": "String"
        },
        "EC2KeyName": {
            "AllowedPattern": "^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\\\-])*$",
            "ConstraintDescription": "Must be letters (upper or lower), numbers, and special characters.",
            "Description": "Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumberOfSubnets": {
            "AllowedValues": [
                1,
                2
            ],
            "Default": 2,
            "Description": "Number of subnets. This must match your selections in the list of subnets below.",
            "Type": "String"
        },
        "PublicAlbTargetGroupArn": {
            "Description": "The public application load balancer target group arn.",
            "Type": "String"
        },
        "PublicAlbHostname": {
            "Description": "The hostname of the public ALB http form (e.g. http://abdc-12345-xyz.<region>.elb.amazonaws.com)",
            "Type": "String"
        },
        "SslCertificate": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": false,
            "Description": "Is there an ACM SSL Certificate attached to the Public Alb?",
            "Type": "String"
        },
        "Subnet": {
            "Description": "Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "WebAsgMax": {
            "AllowedPattern": "^((?!0$)[1-2]?[0-9]|30)$",
            "ConstraintDescription": "Must be a number between 1 and 30.",
            "Default": 4,
            "Description": "Specifies the maximum number of EC2 instances in the Web Autoscaling Group.",
            "Type": "String"
        },
        "WebAsgMin": {
            "AllowedPattern": "^([0-0]?[0-9]|10)$",
            "ConstraintDescription": "Must be a number between 0 and 10.",
            "Default": 2,
            "Description": "Specifies the minimum number of EC2 instances in the Web Autoscaling Group.",
            "Type": "String"
        },
        "WebInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "m5.24xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "h1.2xlarge",
                "h1.4xlarge",
                "h1.8xlarge",
                "h1.16xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "f1.2xlarge",
                "f1.16xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "g3.4xlarge",
                "g3.8xlarge",
                "g3.16xlarge",
                "p2.xlarge",
                "p2.8xlarge",
                "p2.16xlarge",
                "p3.2xlarge",
                "p3.8xlarge",
                "p3.16xlarge"
            ],
            "ConstraintDescription": "Must be a valid Amazon EC2 instance type.",
            "Default": "t2.large",
            "Description": "The Amazon EC2 instance type for your web instances.",
            "Type": "String"
        },
        "WebSecurityGroup": {
            "Description": "Select the web security group.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        }
    },
    "Conditions": {
        "NoSslCertificate": {
            "Fn::Equals": [
                false,
                {
                    "Ref": "SslCertificate"
                }
            ]
        },
        "NumberOfSubnets1": {
            "Fn::Equals": [
                1,
                {
                    "Ref": "NumberOfSubnets"
                }
            ]
        },
        "NumberOfSubnets2": {
            "Fn::Equals": [
                2,
                {
                    "Ref": "NumberOfSubnets"
                }
            ]
        },
        "Subnet0": {
            "Fn::Or": [
                {
                    "Condition": "NumberOfSubnets1"
                },
                {
                    "Condition": "NumberOfSubnets2"
                }
            ]
        },
        "Subnet1": {
            "Condition": "NumberOfSubnets2"
        }
    },
    "Mappings": {
        "RegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-da9e2cbc"
            },
            "ap-northeast-2": {
                "AMI": "ami-1196317f"
            },
            "ap-south-1": {
                "AMI": "ami-d5c18eba"
            },
            "ap-southeast-1": {
                "AMI": "ami-c63d6aa5"
            },
            "ap-southeast-2": {
                "AMI": "ami-ff4ea59d"
            },
            "ca-central-1": {
                "AMI": "ami-d29e25b6"
            },
            "eu-central-1": {
                "AMI": "ami-bf2ba8d0"
            },
            "eu-west-1": {
                "AMI": "ami-1a962263"
            },
            "eu-west-2": {
                "AMI": "ami-e7d6c983"
            },
            "sa-east-1": {
                "AMI": "ami-286f2a44"
            },
            "us-east-1": {
                "AMI": "ami-55ef662f"
            },
            "us-east-2": {
                "AMI": "ami-15e9c770"
            },
            "us-west-1": {
                "AMI": "ami-a51f27c5"
            },
            "us-west-2": {
                "AMI": "ami-bf4193c7"
            }
        }
    },
    "Resources": {
        "WebInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "WebInstanceRole"
                    }
                ]
            }
        },
        "WebInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "logs",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "WebAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "Cooldown": 60,
                "HealthCheckGracePeriod": 120,
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": {
                    "Ref": "WebLaunchConfiguration"
                },
                "MaxSize": {
                    "Ref": "WebAsgMax"
                },
                "MinSize": {
                    "Ref": "WebAsgMin"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Web ASG / ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PropagateAtLaunch": true
                    }
                ],
                "TargetGroupARNs": [
                    {
                        "Ref": "PublicAlbTargetGroupArn"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Fn::If": [
                        "NumberOfSubnets1",
                        [
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Ref": "Subnet"
                                    }
                                ]
                            }
                        ],
                        [
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Ref": "Subnet"
                                    }
                                ]
                            },
                            {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Ref": "Subnet"
                                    }
                                ]
                            }
                        ]
                    ]
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "WebAsgMin"
                    },
                    "Timeout": "PT5M"
                }
            }
        },
        "WebLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "deploy_webserver": [
                            "install_webserver",
                            "build_cacheclient",
                            "install_cacheclient",
                            "start_webserver"
                        ]
                    },
                    "install_webserver": {
                        "packages": {
                            "yum": {
                                "awslogs": [],
                                "httpd24": [],
                                "mysql56": [],
                                "php70": [],
                                "php70-devel": [],
                                "php7-pear": [],
                                "php70-mysqlnd": []
                            }
                        },
                        "files": {
                          "/var/www/html/index.html" : {
                            "content" : { "Fn::Join" : ["\n", [
                              "<img src=\"https://s3.amazonaws.com/cloudformation-examples/cloudformation_graphic.png\" alt=\"AWS CloudFormation Logo\"/>",
                              "<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
                            ]]},
                            "mode"    : "000644",
                            "owner"   : "root",
                            "group"   : "root"
                          }
                        }
                    },
                    "build_cacheclient": {
                        "packages": {
                            "yum": {
                                "gcc-c++": []
                            }
                        },
                        "files": {
                            "/tmp/install_cacheclient.sh": {
                                "content": { "Fn::Join" :["", [
                                    "#!/bin/bash -xe\nln -s /usr/bin/pecl7 /usr/bin/pecl #just so pecl is available easily\npecl7 install igbinary\nwget -P /tmp/ https://s3.amazonaws.com/aws-refarch/wordpress/latest/bits/AmazonElastiCacheClusterClient-2.0.1-PHP70-64bit.tar.gz\ntar -xf '/tmp/AmazonElastiCacheClusterClient-2.0.1-PHP70-64bit.tar.gz'\ncp '/tmp/artifact/amazon-elasticache-cluster-client.so' /usr/lib64/php/7.0/modules/\nif [ ! -f /etc/php-7.0.d/50-memcached.ini ]; then\n    touch /etc/php-7.0.d/50-memcached.ini\nfi\necho 'extension=igbinary.so;' >> /etc/php-7.0.d/50-memcached.ini\necho 'extension=/usr/lib64/php/7.0/modules/amazon-elasticache-cluster-client.so;' >> /etc/php-7.0.d/50-memcached.ini\n"
                                ]]},
                                "mode": 320,
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    },
                    "install_cacheclient": {
                        "commands": {
                            "install_cacheclient": {
                                "command": "./install_cacheclient.sh",
                                "cwd": "/tmp",
                                "ignoreErrors": false
                            }
                        }
                    },
                    "start_webserver": {
                        "services": {
                            "sysvinit": {
                                "httpd": {
                                    "enabled": true,
                                    "ensureRunning": true
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "WebInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceMonitoring": true,
                "InstanceType": {
                    "Ref": "WebInstanceType"
                },
                "KeyName": {
                    "Ref": "EC2KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash -xe\nyum update -y\n/opt/aws/bin/cfn-init --configsets deploy_webserver --verbose --stack ${AWS::StackName} --resource WebLaunchConfiguration --region ${AWS::Region}\n/opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource WebAutoScalingGroup --region ${AWS::Region}\n"
                    }
                }
            }
        }
    },
    "Outputs": {
    }
}